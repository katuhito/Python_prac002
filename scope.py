"""スコープ"""
"""ドット(.)を付けずに偏す名だけを指定して呼び出すと,
   Pythonは直接アクセス可能な名前空間からその名前のオブジェクトを検索する。
   直接アクセス可能な名前空間は、そのコードが記述されている場所によって決まっている。
   そして、どこに書いたコードがどの名前空間に直接アクセスできるかを決めるこのテキスト上の
   領域をスコープと呼ぶ。
"""
"""スコープは狭い順に次の4種類がある。
   ただし、ビルトインスコープはグローバルスコープよりも後で検索される。
   ・ローカルスコープ
   ・エンクロージングスコープ
   ・グローバルスコープ
   ・ビルトインスコープ
"""
"""名前の検索は、狭い範囲のスコープが参照している名前空間から順に行われ、最初に見つかった
   その名前がついたオブジェクトが参照される。
   もし、その名前が見つからなかった場合には、例外NameErrorが送出される。
"""
"""新たな変数を用意すると、その変数はそのコードの記述位置の最も狭いスコープ内に定義され、
   モジュールのトップレベルで変数を定義すると、そのモジュールのグローバルスコープ内に定義される。
"""
"""ローカルスコープ
   ローカルスコープは、主に関数(メソッド)を定義すると作成される。
   関数内で定義された変数は、ローカル変数と呼ばれる。
   ローカル変数は、その関数のローカルスコープ内で定義されるため、その関数内でしか参照できない。
   スコープは関数ごとに分かれるので、違う関数で同じ名前のローカル変数を定義しても別のオブジェクトとなる。
"""

